
☑ ❓
☑ Create reuseable label for InputWithLabel component

Refactor Input with Label to use Component Composition

 Open /src/InputWithLabel.js
 Replace label prop with children so that any child node(s) are used as the label text
 Open /src/AddTodoForm.js
 Refactor the InputWithLabel component
 Remove the label prop
 Change the component to have an open/close tag instead of being self-closing
 Pass the text Title inside the component tags
 View your application in browser
 Verify that your "Add Todo Form" still appears correctly


Add Auto-Focus to Input
 Open /src/InputWithLabel.js
 Add autoFocus prop to input element
 View your application in browser
 Verify that input element is focused on page load
To-Do Application with Focused Input

Now the input is focused automatically, but what happens when you submit the "Add Todo" form? Focus is lost! Let's update our code so the input element is focused on every render:

 Open /src/InputWithLabel.js
 Use the useRef React hook to create an imperative ref named inputRef
 Define a useEffect React hook with an empty dependency list
 Inside the side-effect handler function, call the focus() method on the current inputRef
 Remove the autoFocus prop on the input element
 Add a ref prop with value inputRef on the input element
 View your application in browser
 Verify that input element is focused on page load
 Enter a new todo in "Add Todo" form and submit
 Verify that input element is re-focused automatically
Add "Remove" Button to List Items
 Open /src/TodoListItem.js
 Add a button element, type "button", inside the list item with text "Remove"
 Open /src/App.js
 Define a new handler function named removeTodo with parameter id
 Inside this function, remove the item with the given id from todoList
hint: filter or splice methods
 Call the setTodoList state setter and pass the new or modified Array
 Pass removeTodo as a callback handler prop named onRemoveTodo to the TodoList component
 Open /src/TodoList.js
 Pass onRemoveTodo prop as a callback handler prop named onRemoveTodo to the TodoListItem component
 Open /src/TodoListItem.js
 Add an onClick prop to the button element and pass a function that calls onRemoveTodo from props with the current item id as an argument
 View your application in browser
 Click the "Remove" button next to any list item
 Verify that the corresponding item is removed from the list
 Refresh the page and verify that the item is still removed
To-Do Application with Remove Buttons